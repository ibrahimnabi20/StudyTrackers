name: CI/CD Build, Test, Quality & Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Docker‐registry og image‐navn SKAL være lowercase!
  REGISTRY: ghcr.io
  IMAGE_NAME: ibrahimnabi20/studytrackers

jobs:
  build-test-quality:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: mypassword
          MYSQL_DATABASE: studytrackerdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h127.0.0.1 -pmypassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      ConnectionStrings__DefaultConnection: "server=127.0.0.1;port=3306;database=studytrackerdb;user=root;password=mypassword;"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install .NET tools
        run: |
          dotnet new tool-manifest --force
          dotnet tool install dotnet-sonarscanner
          dotnet tool install dotnet-reportgenerator-globaltool
          dotnet tool install dotnet-stryker
          dotnet tool install dotnet-ef

      - name: SonarQube begin
        run: |
          dotnet sonarscanner begin \
            /k:"StudyTracker" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="http://sonarqube.setgo.dk:9000" \
            /d:sonar.cs.opencover.reportsPaths="coverage-report/Cobertura.xml"

      - name: Restore and Build
        run: |
          dotnet restore StudyTrackers.sln
          dotnet build StudyTrackers.sln --configuration Release --no-restore

      - name: Run tests & collect coverage
        run: |
          dotnet test StudyTrackers.sln \
            --configuration Release \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory tests/UnitTests/TestResults

      - name: Generate coverage report
        run: |
          reportgenerator \
            -reports:"tests/UnitTests/TestResults/**/coverage.cobertura.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:"Cobertura"

      - name: Apply EF Core migrations
        run: dotnet ef database update --project backend/StudyTracker.csproj

      - name: SonarQube end
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Mutation tests (Stryker)
        run: dotnet stryker --break-on 80

  docker-build-push:
    needs: build-test-quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
