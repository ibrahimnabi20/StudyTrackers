name: CI/CD Build, Test & Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install tools
        run: |
          dotnet new tool-manifest --force
          dotnet tool install dotnet-reportgenerator-globaltool
          dotnet tool install dotnet-sonarscanner
          dotnet tool install dotnet-stryker
          dotnet tool install dotnet-ef

      - name: SonarQube begin
        run: |
          dotnet sonarscanner begin \
            /k:"StudyTracker" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="http://sonarqube.setgo.dk:9000" \
            /d:sonar.cs.opencover.reportsPaths="coverage-report/Cobertura.xml"

      - name: Restore & build
        run: |
          dotnet restore StudyTrackers.sln
          dotnet build StudyTrackers.sln --configuration Release --no-restore

      - name: Run unit tests & coverage
        run: |
          dotnet test tests/UnitTests/UnitTests.csproj \
            --configuration Release \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory tests/UnitTests/TestResults

      - name: Generate coverage report
        run: |
          reportgenerator \
            -reports:"tests/UnitTests/TestResults/**/coverage.cobertura.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:"Cobertura"

      - name: Apply EF Core migrations
        run: |
          dotnet ef database update --project backend/StudyTracker.csproj

      - name: SonarQube end
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Mutation tests (Stryker)
        run: dotnet stryker --break-on 80

      - name: Package artifact
        run: zip -r StudyTrackers_${{ github.run_number }}.zip backend/bin/Release/net8.0 && \
          mkdir artifact && mv StudyTrackers_*.zip artifact/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: StudyTracker-app
          path: artifact/

  deploy-to-azure:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    environment:
      name: staging
      url: ${{ steps.deploy-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: StudyTracker-app
          path: deploy_pkg/

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Unzip package
        run: unzip deploy_pkg/StudyTrackers_*.zip -d deploy_pkg/app/

      - name: Deploy to Azure WebApp
        id: deploy-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy_pkg/app/

      - name: Azure URL
        run: echo "Deployed to ${{ steps.deploy-webapp.outputs.webapp-url }}"
