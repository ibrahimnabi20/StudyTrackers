name: CI Build & Test

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore .NET dependencies
        run: dotnet restore StudyTrackers.sln

      - name: Build backend
        run: dotnet build StudyTrackers.sln --no-restore

      - name: Run unit tests with coverage
        run: dotnet test tests/UnitTests/UnitTests.csproj --collect:"XPlat Code Coverage"

      - name: Generate code coverage report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"coverage-report" -reporttypes:"Cobertura"

      - name: Start Docker Compose (frontend + backend)
        run: docker-compose up -d

      - name: Wait for frontend to be ready
        run: npx wait-on http://localhost:5179

      - name: Run Playwright tests
        run: |
          cd frontend
          npx playwright install --with-deps
          npx playwright test

      - name: Stop containers
        run: docker-compose down

      - name: Start SonarQube scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin \
            /k:"StudyTracker" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.cobertura.xml"
          dotnet build StudyTrackers.sln
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
