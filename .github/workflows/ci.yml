name: CI Build & Quality Gates

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install .NET global tools
        run: |
          dotnet new tool-manifest --force
          dotnet tool install dotnet-reportgenerator-globaltool
          dotnet tool install dotnet-sonarscanner
          dotnet tool install dotnet-stryker
          dotnet tool install dotnet-ef

      - name: SonarQube Begin Analysis
        run: |
          dotnet sonarscanner begin \
            /k:"StudyTracker" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="http://sonarqube.setgo.dk:9000" \
            /d:sonar.cs.opencover.reportsPaths="coverage-report/Cobertura.xml"

      - name: Restore & Build
        run: |
          dotnet restore StudyTrackers.sln
          dotnet build StudyTrackers.sln --configuration Release --no-restore

      - name: Run unit tests & collect coverage
        run: |
          dotnet test tests/UnitTests/UnitTests.csproj \
            --configuration Release \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory tests/UnitTests/TestResults

      - name: Generate coverage report
        run: |
          dotnet tool run reportgenerator \
            -reports:"tests/UnitTests/TestResults/**/coverage.cobertura.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:"Cobertura"

      - name: Apply EF Migrations
        run: |
          dotnet tool run dotnet-ef database update --project backend/StudyTracker.csproj

      - name: SonarQube End Analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Mutation testing (Stryker)
        run: dotnet stryker --break-on 80

      - name: Package Docker image
        working-directory: ./backend
        run: |
          docker build -t studytracker-local -f Dockerfile .
          docker save studytracker-local | gzip > ../artifact/studytracker-local.tar.gz

      - name: Upload build artifact
        run: mkdir -p artifact
        uses: actions/upload-artifact@v4
        with:
          name: studytracker-docker
          path: artifact/
