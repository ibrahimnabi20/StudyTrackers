name: CI/CD Build & Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test-release:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: mypassword
          MYSQL_DATABASE: studytrackerdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h127.0.0.1 -pmypassword" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    env:
      ConnectionStrings__DefaultConnection: "server=127.0.0.1;port=3306;database=studytrackerdb;user=root;password=mypassword;"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install .NET tools
        run: |
          dotnet new tool-manifest --force
          dotnet tool install dotnet-sonarscanner
          dotnet tool install dotnet-reportgenerator-globaltool
          dotnet tool install dotnet-stryker
          dotnet tool install dotnet-ef

      - name: Begin SonarQube analysis
        run: |
          dotnet tool run dotnet-sonarscanner begin \
            /k:"StudyTracker" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="http://sonarqube.setgo.dk:9000" \
            /d:sonar.cs.opencover.reportsPaths="coverage-report/Cobertura.xml"

      - name: Restore and Build
        run: |
          dotnet restore StudyTrackers.sln
          dotnet build StudyTrackers.sln --configuration Release --no-restore

      - name: Run tests & collect coverage
        run: |
          dotnet test StudyTrackers.sln \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory tests/UnitTests/TestResults

      - name: Generate coverage report
        run: |
          dotnet tool run reportgenerator \
            -reports:"tests/UnitTests/TestResults/**/coverage.cobertura.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:"Cobertura"

      - name: Apply EF Core migrations
        run: |
          dotnet tool run dotnet-ef database update \
            --project backend/StudyTracker.csproj

      - name: End SonarQube analysis
        run: dotnet tool run dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Run mutation tests
        run: |
          dotnet tool run dotnet-stryker -- --config-file stryker-config.json

      - name: Auto-increment version.txt
        run: |
          VERSION_FILE=version.txt
          OLD_VERSION=$(cat $VERSION_FILE)
          NEW_VERSION=$(date +'%Y.%m.%d.%H%M')
          echo "$NEW_VERSION" > $VERSION_FILE
          echo "Updated version.txt from $OLD_VERSION to $NEW_VERSION"

      - name: Create ZIP release
        run: |
          zip -r StudyTrackers_${{ github.run_number }}.zip . -x "*.git*" -x "node_modules/*"

      - name: Upload ZIP as artifact
        uses: actions/upload-artifact@v4
        with:
          name: StudyTrackers-${{ github.run_number }}
          path: StudyTrackers_${{ github.run_number }}.zip
