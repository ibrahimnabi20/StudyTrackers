ü%
9C:\Users\ibrah\Downloads\StudyTrackers\backend\Startup.cs
	namespace 	
StudyTracker
 
{ 
public 

class 
Startup 
{ 
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
private 
readonly 
IWebHostEnvironment ,
_env- 1
;1 2
public 
Startup 
( 
IConfiguration %
configuration& 3
,3 4
IWebHostEnvironment5 H
envI L
)L M
{ 	
Configuration 
= 
configuration )
;) *
_env 
= 
env 
; 
} 	
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
services 
. 
AddDbContext !
<! "
StudyDbContext" 0
>0 1
(1 2
options2 9
=>: <
options 
. 
UseMySql  
(  !
Configuration   !
.  ! "
GetConnectionString  " 5
(  5 6
$str  6 I
)  I J
,  J K
ServerVersion!! !
.!!! "

AutoDetect!!" ,
(!!, -
Configuration!!- :
.!!: ;
GetConnectionString!!; N
(!!N O
$str!!O b
)!!b c
)!!c d
)"" 
)"" 
;"" 
services%% 
.%% 
	AddScoped%% 
<%% 
IStudyService%% ,
,%%, -
StudyService%%. :
>%%: ;
(%%; <
)%%< =
;%%= >
services(( 
.(( 
AddCors(( 
((( 
options(( $
=>((% '
{)) 
options** 
.** 
	AddPolicy** !
(**! "
$str**" ,
,**, -
builder**. 5
=>**6 8
builder++ 
.++ 
AllowAnyOrigin++ *
(++* +
)+++ ,
.++, -
AllowAnyMethod++- ;
(++; <
)++< =
.++= >
AllowAnyHeader++> L
(++L M
)++M N
)++N O
;++O P
},, 
),, 
;,, 
services// 
.// 
AddSwaggerGen// "
(//" #
)//# $
;//$ %
var22 

togglePath22 
=22 
Path22 !
.22! "
Combine22" )
(22) *
_env22* .
.22. /
ContentRootPath22/ >
,22> ?
$str22@ P
,22P Q
$str22R `
)22` a
;22a b
var33 

toggleJson33 
=33 
File33 !
.33! "
ReadAllText33" -
(33- .

togglePath33. 8
)338 9
;339 :
var44 
featureToggles44 
=44  
JsonSerializer44! /
.44/ 0
Deserialize440 ;
<44; <
FeatureToggles44< J
>44J K
(44K L

toggleJson44L V
)44V W
;44W X
services77 
.77 
AddSingleton77 !
(77! "
featureToggles77" 0
)770 1
;771 2
}88 	
public:: 
void:: 
	Configure:: 
(:: 
IApplicationBuilder:: 1
app::2 5
,::5 6
IWebHostEnvironment::7 J
env::K N
)::N O
{;; 	
if<< 
(<< 
env<< 
.<< 
IsDevelopment<< !
(<<! "
)<<" #
)<<# $
{== 
app>> 
.>> %
UseDeveloperExceptionPage>> -
(>>- .
)>>. /
;>>/ 0
app?? 
.?? 

UseSwagger?? 
(?? 
)??  
;??  !
app@@ 
.@@ 
UseSwaggerUI@@  
(@@  !
)@@! "
;@@" #
}AA 
appCC 
.CC 

UseRoutingCC 
(CC 
)CC 
;CC 
appDD 
.DD 
UseCorsDD 
(DD 
$strDD "
)DD" #
;DD# $
appEE 
.EE 
UseAuthorizationEE  
(EE  !
)EE! "
;EE" #
appGG 
.GG 
UseEndpointsGG 
(GG 
	endpointsGG &
=>GG' )
{HH 
	endpointsII 
.II 
MapControllersII (
(II( )
)II) *
;II* +
}JJ 
)JJ 
;JJ 
}KK 	
}LL 
}MM «
GC:\Users\ibrah\Downloads\StudyTrackers\backend\Services\StudyService.cs
	namespace 	
StudyTracker
 
. 
Services 
{ 
public		 

class		 
StudyService		 
:		 
IStudyService		  -
{

 
private 
readonly 
StudyDbContext '
_context( 0
;0 1
public 
StudyService 
( 
StudyDbContext *
context+ 2
)2 3
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
List 
< 

StudyEntry )
>) *
>* +
GetAllAsync, 7
(7 8
)8 9
=>: <
await 
_context 
. 
StudyEntries '
.' (
ToListAsync( 3
(3 4
)4 5
;5 6
public 
async 
Task 
< 

StudyEntry $
>$ %
GetByIdAsync& 2
(2 3
int3 6
id7 9
)9 :
=>; =
await 
_context 
. 
StudyEntries '
.' (
	FindAsync( 1
(1 2
id2 4
)4 5
;5 6
public 
async 
Task 
< 

StudyEntry $
>$ %
CreateAsync& 1
(1 2

StudyEntry2 <
entry= B
)B C
{ 	
_context 
. 
StudyEntries !
.! "
Add" %
(% &
entry& +
)+ ,
;, -
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
return 
entry 
; 
} 	
public 
async 
Task 
< 
bool 
> 
DeleteAsync  +
(+ ,
int, /
id0 2
)2 3
{   	
var!! 
entry!! 
=!! 
await!! 
_context!! &
.!!& '
StudyEntries!!' 3
.!!3 4
	FindAsync!!4 =
(!!= >
id!!> @
)!!@ A
;!!A B
if"" 
("" 
entry"" 
=="" 
null"" 
)"" 
return"" %
false""& +
;""+ ,
_context## 
.## 
StudyEntries## !
.##! "
Remove##" (
(##( )
entry##) .
)##. /
;##/ 0
await$$ 
_context$$ 
.$$ 
SaveChangesAsync$$ +
($$+ ,
)$$, -
;$$- .
return%% 
true%% 
;%% 
}&& 	
}'' 
}(( ì
HC:\Users\ibrah\Downloads\StudyTrackers\backend\Services\IStudyService.cs
	namespace 	
StudyTracker
 
. 
Services 
{ 
public 

	interface 
IStudyService "
{ 
Task		 
<		 
List		 
<		 

StudyEntry		 
>		 
>		 
GetAllAsync		 *
(		* +
)		+ ,
;		, -
Task

 
<

 

StudyEntry

 
>

 
GetByIdAsync

 %
(

% &
int

& )
id

* ,
)

, -
;

- .
Task 
< 

StudyEntry 
> 
CreateAsync $
($ %

StudyEntry% /
entry0 5
)5 6
;6 7
Task 
< 
bool 
> 
DeleteAsync 
( 
int "
id# %
)% &
;& '
} 
} “

9C:\Users\ibrah\Downloads\StudyTrackers\backend\Program.cs
	namespace 	
StudyTracker
 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} à
CC:\Users\ibrah\Downloads\StudyTrackers\backend\Models\StudyEntry.cs
	namespace 	
StudyTracker
 
. 
Models 
{ 
public 

class 

StudyEntry 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
? 
Subject 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
DurationInMinutes $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
	Timestamp !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
DateTime2 :
.: ;
Now; >
;> ?
} 
} Þ
GC:\Users\ibrah\Downloads\StudyTrackers\backend\Models\FeatureToggles.cs
	namespace 	
StudyTracker
 
. 
Models 
{ 
public 

class 
FeatureToggles 
{ 
public 
bool 
EnableStudyStats $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
bool  
EnableAdvancedExport (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} º
EC:\Users\ibrah\Downloads\StudyTrackers\backend\Data\StudyDbContext.cs
	namespace 	
StudyTracker
 
. 
Data 
{ 
public 

class 
StudyDbContext 
:  !
	DbContext" +
{ 
public 
StudyDbContext 
( 
DbContextOptions .
<. /
StudyDbContext/ =
>= >
options? F
)F G
:		 
base		 
(		 
options		 
)		 
{		 
}		 
public 
DbSet 
< 

StudyEntry 
>  
StudyEntries! -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
} 
} é
MC:\Users\ibrah\Downloads\StudyTrackers\backend\Controllers\StudyController.cs
	namespace 	
StudyTracker
 
. 
Controllers "
{ 
[ 
ApiController 
] 
[		 
Route		 

(		
 
$str		 
)		 
]		 
public

 

class

 
StudyController

  
:

! "
ControllerBase

# 1
{ 
private 
readonly 
IStudyService &
_service' /
;/ 0
public 
StudyController 
( 
IStudyService ,
service- 4
)4 5
{ 	
_service 
= 
service 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetAll) /
(/ 0
)0 1
=>2 4
Ok 
( 
await 
_service 
. 
GetAllAsync )
() *
)* +
)+ ,
;, -
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetById) 0
(0 1
int1 4
id5 7
)7 8
{ 	
var 
entry 
= 
await 
_service &
.& '
GetByIdAsync' 3
(3 4
id4 6
)6 7
;7 8
return 
entry 
== 
null  
?! "
NotFound# +
(+ ,
), -
:. /
Ok0 2
(2 3
entry3 8
)8 9
;9 :
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create) /
(/ 0
[0 1
FromBody1 9
]9 :

StudyEntry; E
entryF K
)K L
{   	
if!! 
(!! 
!!! 

ModelState!! 
.!! 
IsValid!! #
)!!# $
return!!% +

BadRequest!!, 6
(!!6 7

ModelState!!7 A
)!!A B
;!!B C
var"" 
created"" 
="" 
await"" 
_service""  (
.""( )
CreateAsync"") 4
(""4 5
entry""5 :
)"": ;
;""; <
return## 
CreatedAtAction## "
(##" #
nameof### )
(##) *
GetById##* 1
)##1 2
,##2 3
new##4 7
{##8 9
id##: <
=##= >
created##? F
.##F G
Id##G I
}##J K
,##K L
created##M T
)##T U
;##U V
}$$ 	
[&& 	

HttpDelete&&	 
(&& 
$str&& 
)&& 
]&& 
public'' 
async'' 
Task'' 
<'' 
IActionResult'' '
>''' (
Delete'') /
(''/ 0
int''0 3
id''4 6
)''6 7
{(( 	
var)) 
deleted)) 
=)) 
await)) 
_service))  (
.))( )
DeleteAsync))) 4
())4 5
id))5 7
)))7 8
;))8 9
return** 
deleted** 
?** 
	NoContent** &
(**& '
)**' (
:**) *
NotFound**+ 3
(**3 4
)**4 5
;**5 6
}++ 	
},, 
}-- 